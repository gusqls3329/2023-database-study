SELECT *
FROM address
WHERE city_id = 1 OR city_id = 2;

SELECT *
FROM address
WHERE city_id IN (1,2);

SELECT *
FROM person
WHERE lname = 'smith';

SELECT *
FROM person
ORDER BY person_id DESC;

SELECT *
FROM person
ORDER BY lname ASC;

DELETE FROM favorite_food;

INSERT INTO favorite_food 
(corp_id, NAME)
VALUES
(1, 'pizza'); 

insert INTO favorite_food
(corp_id, NAME)
VALUES
(1, 'cookies');

INSERT INTO favorite_food
(corp_id, NAME)
VALUES
(1,'nachos');

INSERT INTO person
(person_id, fname, lname, eye_color, birth_date,
street, city, state, country, postal_code)
VALUES
(3, 'Jackson', 'Jacob', 'GR', '1796-11-22',
'23 Maple St.', 'Arlington', 'VA', 'USA', '20220');

SELECT STR_TO_DATE('dec-21-1980', '%b-%d-%Y');
SELECT date_format(NOW(), '%Y%m%d'); -- 2023/10/30 함수로 '%Y%m%d'가 NOW()로 들어감.

SELECT birth_date, '111', '1975/11/02', DATE_FORMAT(birth_date, '%Y%m%d')
FROM person

-- sakila 데이터 베이스 p73
USE sakila;
SELECT * FROM film;

DESC film;
-- DESC film; : 테이블의 구조를 보고싶을 때 사용

-- p.77
/* customer테이블에서 last_name이 ZIEGLER인 사람을 찾아주세요 =없는 사람임
SELECT *
from customer
WHERE last_name = 'ZIEGLER';*/
-- customer테이블에서 비활성화 된 고객  찾아주세요
SELECT *
from customer
WHERE active= '0';
-- p.80
SELECT *
FROM customer
WHERE ACTIVE = 1
GROUP BY store_id
HAVING COUNT(*) >= 30
ORDER BY customer_id DESC
LIMIT 3;

-- select 절-- SELECT *  :  모든 컬럼
-- -- 보여주고 싶은것을 순서대로 나타낼 수 잇음.
SELECT first_name, last_name, store_id 
FROM customer;

SELECT language_id, NAME AS 'my_name', 'COMMON' AS 'typ', 1 AS 'num'-- 원본의 이름을 바꾸는게 아닌 표시의 이름을 잠시 바꾸는것.,
, UPPER(NAME), LOWER(NAME) , 2*2
FROM language;

-- 중복된 값 없애기
SELECT distinct last_name -- SELECT distinct *는 중복제거 가 될 수 없다.
from actor
WHERE last_name = 'AKROYD';

SELECT distinct first_name, last_name -- first_name, last_name이 함쳤을 때 중복된 값이 없는것
from actor
WHERE last_name = 'AKROYD';

SELECT distinct actor_id
FROM film_actor;

-- 파생테이블
/*SELECT first_name, last_name, email
FROM customer
WHERE first_name = 'JESSIE';*/

SELECT *
FROM ( SELECT first_name, last_name, email
FROM customer
WHERE first_name = 'JESSIE') AS A;

SELECT concat(A.first_name,' ', A.last_name,'입니다.') AS fullname
FROM (SELECT first_name, last_name, email
	FROM customer
	WHERE first_name = 'JESSIE') A;
	
CREATE TEMPORARY TABLE actors_j
(
	actor_id SMALLINT(5),
	first_name VARCHAR(45),
	last_name VARCHAR(45)
	);
	
SELECT * FROM actors_j;
-- 임시테이블
-- 공간을 다른 공간으로 복사해서 준거 뿐임.
insert INTO actors_j
SELECT actor_id, first_name, last_name
FROM actor;

-- 가상뷰 view
CREATE VIEW view_customer_1 AS
SELECT customer_id, first_name, last_name, active
FROM  customer
WHERE customer_id < 10;

SELECT* FROM view_customer_1
WHERE customer_id < 10;


-- actor, film, film_actor조인
SELECT A.first_name, A.last_name, A.actor_id
, FA.actor_id,  FA.film_id
, F.film_id, F.title
FROM film_actor FA
JOIN actor A
ON FA.actor_id = A.actor_id
JOIN film F
ON FA.film_id = F.film_id
ORDER BY FA.actor_id;

UPDATE actor
SET first_name = 'PENELOPA'
WHERE actor_id = 1;
